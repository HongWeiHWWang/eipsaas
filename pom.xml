<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.hotent</groupId>
	<artifactId>x7</artifactId>
	<version>7.2.3</version>
	<packaging>pom</packaging>
	<name>x7</name>
	<description>Hotent EIP X7</description>

	<modules>
		<module>base</module>
		<module>redis</module>
		<module>activemq</module>
		<module>sys</module>
		<module>table</module>
		<module>ueditor</module>
		<module>calendar</module>
		<module>uc</module>
		<module>uc-api</module>
		<module>uc-api-impl</module>
		<module>bo</module>
		<module>poi</module>
		<module>job</module>
		<module>mail</module>
		<module>service</module>
		<module>integrate</module>
		<module>i18n</module>
		<module>file</module>
		<module>form</module>
		<module>bpm</module>
		<module>portal</module>
		<module>bpm-model</module>
		<module>bpm-runtime</module>
		<module>activiti</module>
		<module>rest-auth-service</module>
		<module>oa</module>
		<module>assembly</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<spring.boot.version>2.2.6.RELEASE</spring.boot.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-cloud-netflix.version>2.2.2.RELEASE</spring-cloud-netflix.version>
		<springfox.version>2.9.2</springfox.version>
		<spring-ldap.version>2.3.2.RELEASE</spring-ldap.version>
		<mybatis-plus.version>3.3.1</mybatis-plus.version>
		<dynamic-datasource.version>3.0.0</dynamic-datasource.version>
		<pagehelper.version>1.2.4</pagehelper.version>
		<druid.version>1.1.21</druid.version>
		<oracle-driver.version>11.2.0.2</oracle-driver.version>
		<oracle-ojdbc-driver.version>19.7.0.0.0</oracle-ojdbc-driver.version>
		<mssql-driver.version>8.2.2.jre8</mssql-driver.version>
		<jjwt.version>0.9.0</jjwt.version>
		<commons-lang.version>2.6</commons-lang.version>
		<zip4j.version>1.3.1</zip4j.version>
		<pingyin.version>2.5.0</pingyin.version>
		<poi.version>3.17</poi.version>
		<poi-excelant.version>3.17</poi-excelant.version>
		<commons-io.version>2.6</commons-io.version>
		<jsr311-api.version>1.1.1</jsr311-api.version>
		<poi-ooxml.version>3.17</poi-ooxml.version>
		<fontbox.version>1.8.4</fontbox.version>
		<poi-scratchpad.version>3.17</poi-scratchpad.version>
		<poi-ooxml-schemas.version>3.17</poi-ooxml-schemas.version>
		<axis.version>1.4</axis.version>
		<jaxrpc.version>1.1</jaxrpc.version>
		<commons-discovery.version>0.5</commons-discovery.version>
		<freemarker.version>2.3.28</freemarker.version>
		<groovy-all.version>2.1.6</groovy-all.version>
		<jedis.version>2.9.0</jedis.version>
		<logback.version>1.2.3</logback.version>
		<log4j-over-slf4j.version>1.7.26</log4j-over-slf4j.version>
		<dom4j.version>1.6.1</dom4j.version>
		<commons-beanutils.version>1.9.3</commons-beanutils.version>
		<quartz.version>2.2.2</quartz.version>
		<proguard-base-version>6.0.3</proguard-base-version>
		<commons-pool2.version>2.5.0</commons-pool2.version>
		<alibaba-seata.version>2.2.0.RELEASE</alibaba-seata.version>
		<seata.version>1.2.0</seata.version>
		<lombok.version>1.18.12</lombok.version>
	</properties>

	<!-- 定义全局依赖供子模块使用 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>5.4.0</version>
			</dependency>
			<!-- spring boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<!-- spring cloud -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- cloud netflix -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-netflix</artifactId>
				<version>${spring-cloud-netflix.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!--lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<optional>true</optional>
			</dependency>
			<!-- Swagger 2 -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<!--Mybatis-Plus依赖 -->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>dynamic-datasource-spring-boot-starter</artifactId>
				<version>${dynamic-datasource.version}</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-generator</artifactId>
				<version>${mybatis-plus.version}</version>
			</dependency>
			<!-- Oracle 连接驱动 -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>oracledriver</artifactId>
				<version>${oracle-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc8</artifactId>
				<version>${oracle-ojdbc-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>orai18n</artifactId>
				<version>${oracle-ojdbc-driver.version}</version>
			</dependency>
			<!-- SQLServer 连接驱动 -->
			<dependency>
				<groupId>com.microsoft.sqlserver</groupId>
				<artifactId>mssql-jdbc</artifactId>
				<version>${mssql-driver.version}</version>
			</dependency>
			<!-- postgreSQL 连接驱动 -->
			<!-- <dependency>
			    <groupId>org.postgresql</groupId>
			    <artifactId>postgresql</artifactId>
			    <scope>runtime</scope>
			</dependency> -->
			<dependency>
			    <groupId>org.postgresql</groupId>
			    <artifactId>postgresql</artifactId>
			    <version>42.2.14</version>
			</dependency>
			<!-- 数据库连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!-- json web token -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<!-- commons lang -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<!-- commons-beanutils -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>
			<!-- zip4j -->
			<dependency>
				<groupId>net.lingala.zip4j</groupId>
				<artifactId>zip4j</artifactId>
				<version>${zip4j.version}</version>
			</dependency>
			<!-- ad同步 -->
			<dependency>
				<groupId>org.springframework.ldap</groupId>
				<artifactId>spring-ldap-core</artifactId>
				<version>${spring-ldap.version}</version>
			</dependency>
			<!-- pinyin4j -->
			<dependency>
				<groupId>com.belerweb</groupId>
				<artifactId>pinyin4j</artifactId>
				<version>${pingyin.version}</version>
			</dependency>
			<!-- org.apache.poi -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>${poi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-excelant</artifactId>
				<version>${poi-excelant.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>fontbox</artifactId>
				<version>${fontbox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-ooxml.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml-schemas</artifactId>
				<version>${poi-ooxml-schemas.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-scratchpad</artifactId>
				<version>${poi-scratchpad.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<!-- Jsr311 Api -->
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>jsr311-api</artifactId>
				<version>${jsr311-api.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.axis/axis -->
			<dependency>
				<groupId>org.apache.axis</groupId>
				<artifactId>axis</artifactId>
				<version>${axis.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxrpc</artifactId>
				<version>${jaxrpc.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/commons-discovery/commons-discovery -->
			<dependency>
				<groupId>commons-discovery</groupId>
				<artifactId>commons-discovery</artifactId>
				<version>${commons-discovery.version}</version>
			</dependency>
			<!-- freemarker -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<!-- groovy -->
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy-all.version}</version>
			</dependency>
			<!-- jedis -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${jedis.version}</version>
			</dependency>
			<!-- dom4j -->
			<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>${dom4j.version}</version>
			</dependency>
			<!-- quartz -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.proguard</groupId>
				<artifactId>proguard-base</artifactId>
				<version>${proguard-base-version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${log4j-over-slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<version>${commons-pool2.version}</version>
			</dependency>
			<!-- seata -->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-seata</artifactId>
				<version>${alibaba-seata.version}</version>
				<exclusions>
					<exclusion>
						<groupId>io.seata</groupId>
						<artifactId>seata-spring-boot-starter</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.seata</groupId>
				<artifactId>seata-spring-boot-starter</artifactId>
				<version>${seata.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<fork>true</fork>
					<compilerArguments>
						<extdirs>${env.JAVA_HOME}\jre\lib</extdirs>
					</compilerArguments>
				</configuration>
			</plugin>
			<!-- 解决maven test命令时console出现中文乱码的问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<skip>true</skip>
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
				</configuration>
			</plugin>
			<!-- 让配置文件可以读取pom中的信息 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>bpmn</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
					<delimiters>
						<delimiter>@@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<!-- 配置远程发布到私服，mvn deploy -->
<!--	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://www.hotent.xyz:8081/nexus/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<url>http://www.hotent.xyz:8081/nexus/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>-->
</project>
